/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.consultorio.secretaria;

import com.consultorio.DAO.ClinicaDAO;
import com.consultorio.DAO.CompromissoDAO;
import com.consultorio.DAO.Conexao;
import com.consultorio.DAO.ConvenioDAO;
import com.consultorio.DAO.MedicoDAO;
import com.consultorio.DAO.PacienteDAO;
import com.consultorio.DAO.PlanosDAO;
import com.consultorio.main.ErrorMsg;
import com.consultorio.main.RightMsg;
import com.consultorio.main.TrocarPanel;
import com.consultorio.model.Clinica;
import com.consultorio.model.Compromisso;
import com.consultorio.model.Convenio;
import com.consultorio.model.Medico;
import com.consultorio.model.Paciente;
import com.consultorio.model.Plano;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author aluno
 */
public class opRelatorio extends javax.swing.JPanel {

    int conv;
    ButtonGroup sexo;
    Date dataAtual = new Date();
    SimpleDateFormat formatadorCompleto = new SimpleDateFormat("ddMMyyyyHHmmss");
    SimpleDateFormat formatadorSimples = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form home
     */
    public opRelatorio() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        Home = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        bgMedico1 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        bgMedico2 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        bgMedico3 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        bgMedico4 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(880, 470));

        pnlPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        pnlPrincipal.setLayout(new javax.swing.BoxLayout(pnlPrincipal, javax.swing.BoxLayout.LINE_AXIS));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel6.setText("Emitir Relatório");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fullsize_1.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(32, 47, 90));

        bgMedico1.setBackground(new java.awt.Color(106, 116, 145));
        bgMedico1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bgMedico1.setPreferredSize(new java.awt.Dimension(213, 189));
        bgMedico1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bgMedico1MousePressed(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgMedico1MouseEntered(evt);
            }
        });
        bgMedico1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(204, 204, 204));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Médicos Cadastrados");
        bgMedico1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 40));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/medico.png"))); // NOI18N
        bgMedico1.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        bgMedico2.setBackground(new java.awt.Color(106, 116, 145));
        bgMedico2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bgMedico2.setPreferredSize(new java.awt.Dimension(213, 189));
        bgMedico2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bgMedico2MousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bgMedico2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgMedico2MouseEntered(evt);
            }
        });
        bgMedico2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(204, 204, 204));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Consultas Realizadas");
        bgMedico2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 180, -1));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/consulta.png"))); // NOI18N
        bgMedico2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        bgMedico3.setBackground(new java.awt.Color(106, 116, 145));
        bgMedico3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bgMedico3.setPreferredSize(new java.awt.Dimension(213, 189));
        bgMedico3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bgMedico3MousePressed(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgMedico3MouseEntered(evt);
            }
        });
        bgMedico3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel36.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(204, 204, 204));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Pacientes Cadastrados");
        bgMedico3.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 200, 20));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pacienteP.png"))); // NOI18N
        bgMedico3.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        bgMedico4.setBackground(new java.awt.Color(106, 116, 145));
        bgMedico4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bgMedico4.setPreferredSize(new java.awt.Dimension(213, 189));
        bgMedico4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bgMedico4MousePressed(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgMedico4MouseEntered(evt);
            }
        });
        bgMedico4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(204, 204, 204));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Convênios Cadastrados");
        bgMedico4.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 10, 220, -1));

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ambulancia.png"))); // NOI18N
        bgMedico4.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(bgMedico1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bgMedico3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bgMedico2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bgMedico4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bgMedico4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bgMedico2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bgMedico3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(bgMedico1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(97, 97, 97))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel6)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPrincipal.add(Home);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bgMedico1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bgMedico1MouseEntered

    private void bgMedico2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bgMedico2MouseEntered

    private void bgMedico3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bgMedico3MouseEntered

    private void bgMedico4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bgMedico4MouseEntered

    private void bgMedico1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico1MousePressed
        System.out.println("Gerando PDF...");

        Document document = new Document();
        Connection con = Conexao.AbrirConexao();

        ClinicaDAO sqlC = new ClinicaDAO(con);
        MedicoDAO sqlM = new MedicoDAO(con);
        Clinica clinica = sqlC.Capturar();

        List<Medico> medicos = sqlM.ListarMedicos("", "");

        try {
            PdfWriter.getInstance(document, new FileOutputStream("listaMedicos"+formatadorCompleto.format(dataAtual)+".pdf"));
            document.open();
            
            Paragraph titulo = new Paragraph("Consultório Médico - " + clinica.getNome());
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            
            Paragraph cab = new Paragraph(clinica.getCabecalho());
            cab.setAlignment(Element.ALIGN_CENTER);
            
            document.add(titulo);
            document.add(cab);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Lista de Médicos Cadastrados:              Emitido em:"+formatadorSimples.format(dataAtual)));
            document.add(new Paragraph("\n"));

            PdfPTable table = new PdfPTable(new float[]{10f, 10f, 3f,10f});
            PdfPCell celulaNome = new PdfPCell(new Phrase("Nome"));
            celulaNome.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell celulaCrm = new PdfPCell(new Phrase("CRM"));
            celulaCrm.setHorizontalAlignment(Element.ALIGN_CENTER);

            PdfPCell celulaSexo = new PdfPCell(new Phrase("Sexo"));
            celulaSexo.setHorizontalAlignment(Element.ALIGN_CENTER);

            PdfPCell celulaTelefone = new PdfPCell(new Phrase("Telefone"));
            celulaTelefone.setHorizontalAlignment(Element.ALIGN_CENTER);

            table.addCell(celulaNome);
            table.addCell(celulaCrm);
            table.addCell(celulaSexo);
            table.addCell(celulaTelefone);

            for (Medico atual : medicos) {
                PdfPCell celula1 = new PdfPCell(new Phrase(atual.getNome()));
                PdfPCell celula2 = new PdfPCell(new Phrase(atual.getCrm()));
                PdfPCell celula3 = new PdfPCell(new Phrase(String.valueOf(atual.getSexo())));
                PdfPCell celula4 = new PdfPCell(new Phrase(String.valueOf(atual.getTelefone())));

                table.addCell(celula1);
                table.addCell(celula2);
                table.addCell(celula3);
                table.addCell(celula4);
            }
            
            document.add(table);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Endereço: "+clinica.getNumero()+", "+clinica.getRua()+", "+clinica.getBairro()));
            document.add(new Paragraph("Telefone: "+clinica.getTelefone()+"        CNPJ: "+clinica.getCnpj()));
            
            
            
            new RightMsg().ReceberMsg("PDF Construído");

        } catch (Exception ex) {
            System.out.println("ERROU!!");
        } finally {
            document.close();
        }
    }//GEN-LAST:event_bgMedico1MousePressed

    private void bgMedico3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico3MousePressed
       System.out.println("Gerando PDF...");

        Document document = new Document();
        Connection con = Conexao.AbrirConexao();

        ClinicaDAO sqlC = new ClinicaDAO(con);
        PacienteDAO sqlM = new PacienteDAO(con);
        Clinica clinica = sqlC.Capturar();

        List<Paciente> medicos = sqlM.ListarPacientes("","");

        try {
            PdfWriter.getInstance(document, new FileOutputStream("listaPacientes"+formatadorCompleto.format(dataAtual)+".pdf"));
            document.open();
            
            Paragraph titulo = new Paragraph("Consultório Médico - " + clinica.getNome());
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            
            Paragraph cab = new Paragraph(clinica.getCabecalho());
            cab.setAlignment(Element.ALIGN_CENTER);
            
            document.add(titulo);
            document.add(cab);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Lista de Pacientes Cadastrados:              Emitido em:"+formatadorSimples.format(dataAtual)));
            document.add(new Paragraph("\n"));

            PdfPTable table = new PdfPTable(new float[]{10f, 10f, 3f,10f});
            PdfPCell celulaNome = new PdfPCell(new Phrase("Nome"));
            celulaNome.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell celulaCrm = new PdfPCell(new Phrase("CPF"));
            celulaCrm.setHorizontalAlignment(Element.ALIGN_CENTER);

            PdfPCell celulaSexo = new PdfPCell(new Phrase("Sexo"));
            celulaSexo.setHorizontalAlignment(Element.ALIGN_CENTER);

            PdfPCell celulaTelefone = new PdfPCell(new Phrase("Telefone"));
            celulaTelefone.setHorizontalAlignment(Element.ALIGN_CENTER);

            table.addCell(celulaNome);
            table.addCell(celulaCrm);
            table.addCell(celulaSexo);
            table.addCell(celulaTelefone);

            for (Paciente atual : medicos) {
                PdfPCell celula1 = new PdfPCell(new Phrase(atual.getNome()));
                PdfPCell celula2 = new PdfPCell(new Phrase(atual.getCpf()));
                PdfPCell celula3 = new PdfPCell(new Phrase(String.valueOf(atual.getSexo())));
                PdfPCell celula4 = new PdfPCell(new Phrase(String.valueOf(atual.getTelefone())));

                table.addCell(celula1);
                table.addCell(celula2);
                table.addCell(celula3);
                table.addCell(celula4);
            }
            
            document.add(table);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Endereço: "+clinica.getNumero()+", "+clinica.getRua()+", "+clinica.getBairro()));
            document.add(new Paragraph("Telefone: "+clinica.getTelefone()+"        CNPJ: "+clinica.getCnpj()));
            new RightMsg().ReceberMsg("PDF Construído");

        } catch (Exception ex) {
            System.out.println("ERROU!!");
        } finally {
            document.close();
        }
    }//GEN-LAST:event_bgMedico3MousePressed

    private void bgMedico4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico4MousePressed
        System.out.println("Gerando PDF...");

        Document document = new Document();
        Connection con = Conexao.AbrirConexao();

        ClinicaDAO sqlC = new ClinicaDAO(con);
        ConvenioDAO sqlM = new ConvenioDAO(con);
        Clinica clinica = sqlC.Capturar();

        List<Convenio> medicos = sqlM.ListarConvenios("", "");

        try {
            PdfWriter.getInstance(document, new FileOutputStream("listaConvenios"+formatadorCompleto.format(dataAtual)+".pdf"));
            document.open();
            
            Paragraph titulo = new Paragraph("Consultório Médico - " + clinica.getNome());
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            
            Paragraph cab = new Paragraph(clinica.getCabecalho());
            cab.setAlignment(Element.ALIGN_CENTER);
            
            document.add(titulo);
            document.add(cab);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Lista de Convenios Cadastrados:              Emitido em:"+formatadorSimples.format(dataAtual)));
            document.add(new Paragraph("\n"));

            PdfPTable table = new PdfPTable(new float[]{10f, 10f, 10f});
            PdfPCell celulaNome = new PdfPCell(new Phrase("Nome"));
            celulaNome.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell celulaCrm = new PdfPCell(new Phrase("CNPJ"));
            celulaCrm.setHorizontalAlignment(Element.ALIGN_CENTER);

         

            PdfPCell celulaTelefone = new PdfPCell(new Phrase("Telefone"));
            celulaTelefone.setHorizontalAlignment(Element.ALIGN_CENTER);

            table.addCell(celulaNome);
            table.addCell(celulaCrm);
            
            table.addCell(celulaTelefone);

            for(Convenio atual : medicos) {
                PdfPCell celula1 = new PdfPCell(new Phrase(atual.getNome()));
                PdfPCell celula2 = new PdfPCell(new Phrase(atual.getCnpj()));
               
                PdfPCell celula4 = new PdfPCell(new Phrase(String.valueOf(atual.getTelefone())));

                table.addCell(celula1);
                table.addCell(celula2);
               
                table.addCell(celula4);
            }
            
            document.add(table);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Endereço: "+clinica.getNumero()+", "+clinica.getRua()+", "+clinica.getBairro()));
            document.add(new Paragraph("Telefone: "+clinica.getTelefone()+"        CNPJ: "+clinica.getCnpj()));
            
            
            new RightMsg().ReceberMsg("PDF Construído");

        } catch (Exception ex) {
            System.out.println("ERROU!!");
        } finally {
            document.close();
        }
    }//GEN-LAST:event_bgMedico4MousePressed

    private void bgMedico2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico2MouseClicked
        System.out.println(formatadorCompleto.format(dataAtual));
    }//GEN-LAST:event_bgMedico2MouseClicked

    private void bgMedico2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMedico2MousePressed
       System.out.println("Gerando PDF...");

        Document document = new Document();
        Connection con = Conexao.AbrirConexao();

        ClinicaDAO sqlC = new ClinicaDAO(con);
        CompromissoDAO sqlComp = new CompromissoDAO(con);
        
        Clinica clinica = sqlC.Capturar();

        List<Compromisso> compromissos = sqlComp.ListarConsultas();

        try {
            PdfWriter.getInstance(document, new FileOutputStream("listaConsultas"+formatadorCompleto.format(dataAtual)+".pdf"));
            document.open();
            
            Paragraph titulo = new Paragraph("Consultório Médico - " + clinica.getNome());
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            
            Paragraph cab = new Paragraph(clinica.getCabecalho());
            cab.setAlignment(Element.ALIGN_CENTER);
            
            document.add(titulo);
            document.add(cab);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Lista de Consultas Realizadas:              Emitido em:"+formatadorSimples.format(dataAtual)));
            document.add(new Paragraph("\n"));

            PdfPTable table = new PdfPTable(new float[]{5f, 5f, 5f, 5f});
            PdfPCell celulaNome = new PdfPCell(new Phrase("Medico"));
            celulaNome.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell celulaCrm = new PdfPCell(new Phrase("Paciente"));
            celulaCrm.setHorizontalAlignment(Element.ALIGN_CENTER);

            PdfPCell celulaSexo = new PdfPCell(new Phrase("Data"));
            celulaSexo.setHorizontalAlignment(Element.ALIGN_CENTER);

            PdfPCell celulaTelefone = new PdfPCell(new Phrase("Descrição"));
            celulaTelefone.setHorizontalAlignment(Element.ALIGN_CENTER);

            table.addCell(celulaNome);
            table.addCell(celulaCrm);
            table.addCell(celulaSexo);
            table.addCell(celulaTelefone);

            for (Compromisso atual : compromissos) {
                System.out.println("Repetiu....");
                PdfPCell celula1 = new PdfPCell(new Phrase(atual.getHorario_inicial()));
                PdfPCell celula2 = new PdfPCell(new Phrase(atual.getHorario_final()));
                PdfPCell celula3 = new PdfPCell(new Phrase(atual.getData()));
                PdfPCell celula4 = new PdfPCell(new Phrase(atual.getDescricao()));

                table.addCell(celula1);
                table.addCell(celula2);
                table.addCell(celula3);
                table.addCell(celula4);
            }
            
            document.add(table);
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("\n"));
            document.add(new Paragraph("Endereço: "+clinica.getNumero()+", "+clinica.getRua()+", "+clinica.getBairro()));
            document.add(new Paragraph("Telefone: "+clinica.getTelefone()+"        CNPJ: "+clinica.getCnpj()));
            
            
            
            new RightMsg().ReceberMsg("PDF Construído");

        } catch (Exception ex) {
            System.out.println("ERROU!!");
        } finally {
            document.close();
        }
    }//GEN-LAST:event_bgMedico2MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Home;
    private javax.swing.JPanel bgMedico1;
    private javax.swing.JPanel bgMedico2;
    private javax.swing.JPanel bgMedico3;
    private javax.swing.JPanel bgMedico4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlPrincipal;
    // End of variables declaration//GEN-END:variables
}
